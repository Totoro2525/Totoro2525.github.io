<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陳大C的个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://totoro2525.github.io/"/>
  <updated>2019-03-30T07:12:29.404Z</updated>
  <id>https://totoro2525.github.io/</id>
  
  <author>
    <name>陳大C</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Service启动并传输数据</title>
    <link href="https://totoro2525.github.io/2019/03/30/%E5%90%AF%E5%8A%A8Service%E6%9C%8D%E5%8A%A1%E5%B9%B6%E4%BC%A0%E8%BE%93%E6%95%B0%E6%8D%AE/"/>
    <id>https://totoro2525.github.io/2019/03/30/启动Service服务并传输数据/</id>
    <published>2019-03-30T05:46:43.000Z</published>
    <updated>2019-03-30T07:12:29.404Z</updated>
    
    <content type="html"><![CDATA[<p>Service是四大组件之一，Service是服务的意思，像Windows上面的服务一样，服务是在后台运行的，承担着静悄悄，默默的在后台付出的工作。<br><br><br>在开发过程中Service可以在很多地方使用，比如播放多媒体的时候用户启动了其他Activity ，这个时候程序要在后台继续播放；或者在后台记录用户地理位置的改变，或者启动服务来一直监听某种事件等。虽然Service存在的价值不如Activity,但是一般都让Service执行耗时时间较长的操作。下面我们详细介绍一下Service。<br><a id="more"></a> </p><h2 id="一，启动Service主要有两种方式"><a href="#一，启动Service主要有两种方式" class="headerlink" title="一，启动Service主要有两种方式:"></a>一，启动Service主要有两种方式:</h2><ol><li><p>startService(),调用者与服务之间没有关联，即时调用者退出，服务仍然可以运行。</p></li><li><p>bindService(),调用者与服务绑定在一起，调用者一旦退出(启动Service的Activity退出，Service也退出)，服务也退出。</p><p>绑定服务是调用bindService方法启动的，绑定调用了onBind生命周期方法，改方法返回IBinder对象，同时启动服务的Activity必须提供ServiceConnect接口的实现类，它有两个方法onServiceConnected和onServiceDisconnected方法，监听Activity与服务类之间的连接。</p></li></ol><h2 id="二，Service的生命周期"><a href="#二，Service的生命周期" class="headerlink" title="二，Service的生命周期:"></a>二，Service的生命周期:</h2><p><img src="/2019/03/30/启动Service服务并传输数据/services.jpg" alt></p><ol><li>Started Service的生命周期：</li></ol><ul><li>onCreate()：创建服务</li><li>onStartCommand()：服务开始运行（在2.0以前版本中，使用onStart()回调方法）</li><li>onDestroy() ：服务被停止<br>【详细说明：】</li><li>在程序中调用：context.bindService()会触发执行Service生命周期中的onCreate()、onBind()回调方法，此时服务开始运行；</li><li>onBind将返回给客户端一个IBind接口实例，IBind允许客户端回调服务的方法，比如得到Service运行的状态或其他操作。此后调用者（Context，例如Activity）会和Service绑定在一起；</li><li>如果调用Service的调用者Context退出了，那么会依次调用Service生命周期中的* onUnbind()、onDestroy()回调方法，会让服务停止；</li><li>所以BindService的生命周期为：onCreate –&gt; onBind(只一次，不可多次绑定) –&gt; onUnbind –&gt; onDestory。<br>##三，绑定Service通信：</li></ul><ol><li>向Service内部传递数据：<br>创建一个Activity,用来启动Service,我们在Activity里面创建一个布局，如下所示：<br><img src="/2019/03/30/启动Service服务并传输数据/2.phg" alt><br>EditText用来动态改变向Service里面数据，点击同步数据按钮用来将Activity里面的数据传递到Service里面。</li></ol><p>　　将数据同步到Service里面需要利用服务得IBinder对象。下面是我的服务类：<br><div><div class="fold_hider"><div class="close hider_title">点击显/隐内容</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> running = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> String data = <span class="string">"默认信息"</span>;<span class="comment">//创建一个字符串，用来接收数据</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">　　　　</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Binder();<span class="comment">//④返回Binder的事例</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *②创建一个类继承Binder,来对data数据进行更新</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Binder</span> <span class="keyword">extends</span> <span class="title">android</span>.<span class="title">os</span>.<span class="title">Binder</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(String data)</span></span>&#123;<span class="comment">//③写一个公共方法，用来对data数据赋值。</span></span><br><span class="line">            MyService.<span class="keyword">this</span>.data = data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        running = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">new</span> Thread()&#123;  <span class="comment">//①创建一个Thread用来数据传递进来的data数据。</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.run();</span><br><span class="line">                <span class="keyword">while</span> (running)&#123;</span><br><span class="line">                    System.out.println(data);<span class="comment">//打印数据</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        running = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div></div><br>在Activity中，需要实现ServiceConnection接口，并且在绑定成功的onServiceConnected方法中初始化Binder对象：</p><ol><li><p>首先定义变量 private MyService.Binder binder = null;</p></li><li><p>在onServiceConnected方法中进行初始化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">        binder = (MyService.Binder) service;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>点击同步数据按钮向Service里面赋值：</p></li></ol><p>　　binder.setData(editText.getText().toString());</p><p>具体代码如下所示：<br><div><div class="fold_hider"><div class="close hider_title">点击显/隐内容</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">OnClickListener</span>, <span class="title">ServiceConnection</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> EditText editText;</span><br><span class="line">    <span class="keyword">private</span> MyService.Binder binder = <span class="keyword">null</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.content_main);</span><br><span class="line">        editText = (EditText) findViewById(R.id.edit);</span><br><span class="line">        findViewById(R.id.bindService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.unbindService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnSync).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.bindService:<span class="comment">//点击绑定服务按钮</span></span><br><span class="line">                bindService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.class),<span class="keyword">this</span>, Context.BIND_AUTO_CREATE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.unbindService:<span class="comment">//解除绑定服务按钮</span></span><br><span class="line">                unbindService(<span class="keyword">this</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnSync:<span class="comment">//同步数据按钮</span></span><br><span class="line">                <span class="keyword">if</span> (binder != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    binder.setData(editText.getText().toString());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">        binder = (MyService.Binder) service;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><br>这样就完成了想Service内部的数据传递。</p><h2 id="四，service向Activity传递数据"><a href="#四，service向Activity传递数据" class="headerlink" title="四，service向Activity传递数据"></a>四，service向Activity传递数据</h2><p>上面介绍了Activity向Service内部传值，现在我们来介绍一下Service向Activity传递数据：</p><p>从Service向Activity传值，我们需要利用接口，首先在MyService里面自定义一个接口CallBack,实现onDataChanged方法;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="class"><span class="keyword">interface</span>  <span class="title">CallBack</span></span>&#123;</span><br><span class="line">         <span class="function"><span class="keyword">void</span> <span class="title">onDataChanged</span><span class="params">(String data)</span></span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>在MyService里面定义CallBack类型的变量，并且实现它的set方法，来获得CallBack的实例。在MyService的Oncrate方法中定义一个变量i,然后动态改变i的数值，然后通过callback.onDataChanged(“数据=”+i) 将数据进行传递。具体实现方法如下所示：<br><div><div class="fold_hider"><div class="close hider_title">点击显/隐内容</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">ublic <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> running = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Binder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *创建一个类继承Binder,来进行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Binder</span> <span class="keyword">extends</span> <span class="title">android</span>.<span class="title">os</span>.<span class="title">Binder</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> MyService <span class="title">getService</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> MyService.<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        running = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">new</span> Thread()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.run();</span><br><span class="line">                <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (running)&#123;</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="keyword">if</span> (callback != <span class="keyword">null</span>)&#123;</span><br><span class="line">                        callback.onDataChanged(<span class="string">"数据="</span>+i);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        running = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CallBack callback = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCallback</span><span class="params">(CallBack callback)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.callback = callback;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="class"><span class="keyword">interface</span>  <span class="title">CallBack</span></span>&#123;</span><br><span class="line">         <span class="function"><span class="keyword">void</span> <span class="title">onDataChanged</span><span class="params">(String data)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><br>在Activity中我们需要</p><ol><li>获得Myservice的实例来调用serCallBack方法，所以我在MyService的Binder方法里面添加了获取MyService实例的方法。</li><li>将调用CallBack接口之后onDataChanged方法返回的值赋值到TextView上面，还是用到了servce的IBinder对象。<br>具体实现方法如下所示：<div><div class="fold_hider"><div class="close hider_title">点击显/隐内容</div></div><div class="fold"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">OnClickListener</span>, <span class="title">ServiceConnection</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView textView;</span><br><span class="line">    <span class="keyword">private</span> MyService.Binder binder = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.content_main);</span><br><span class="line">        textView = (TextView) findViewById(R.id.tvout);</span><br><span class="line">        findViewById(R.id.bindService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.unbindService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.bindService:<span class="comment">//点击绑定服务按钮</span></span><br><span class="line">                bindService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.class),<span class="keyword">this</span>, Context.BIND_AUTO_CREATE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.unbindService:<span class="comment">//解除绑定服务按钮</span></span><br><span class="line">                unbindService(<span class="keyword">this</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">        binder = (MyService.Binder) service;</span><br><span class="line"></span><br><span class="line">        binder.getService().setCallback(<span class="keyword">new</span> MyService.CallBack() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDataChanged</span><span class="params">(String data)</span> </span>&#123;<span class="comment">//因为在Service里面赋值data是在Thread中进行的，所以我们不能直接在这里将返回的值展示在TextView上。</span></span><br><span class="line">                Message msg = <span class="keyword">new</span> Message();</span><br><span class="line">                Bundle bundle = <span class="keyword">new</span> Bundle();</span><br><span class="line">                bundle.putString(<span class="string">"data"</span>,data);</span><br><span class="line">                msg.setData(bundle);</span><br><span class="line">                handler.sendMessage(msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Handler handler = <span class="keyword">new</span> Handler()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.handleMessage(msg);</span><br><span class="line">            textView.setText(msg.getData().getString(<span class="string">"data"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Service是四大组件之一，Service是服务的意思，像Windows上面的服务一样，服务是在后台运行的，承担着静悄悄，默默的在后台付出的工作。&lt;br&gt;&lt;br&gt;&lt;br&gt;在开发过程中Service可以在很多地方使用，比如播放多媒体的时候用户启动了其他Activity ，这个时候程序要在后台继续播放；或者在后台记录用户地理位置的改变，或者启动服务来一直监听某种事件等。虽然Service存在的价值不如Activity,但是一般都让Service执行耗时时间较长的操作。下面我们详细介绍一下Service。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="https://totoro2525.github.io/categories/Android/"/>
    
    
      <category term="-Android -Service" scheme="https://totoro2525.github.io/tags/Android-Service/"/>
    
  </entry>
  
  <entry>
    <title>比悲伤更悲伤的故事：我不能在你身边</title>
    <link href="https://totoro2525.github.io/2019/03/25/%E6%9C%89%E4%B8%80%E7%A7%8D%E6%82%B2%E4%BC%A4/"/>
    <id>https://totoro2525.github.io/2019/03/25/有一种悲伤/</id>
    <published>2019-03-25T14:00:24.678Z</published>
    <updated>2019-03-27T12:34:21.459Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="300" height="86" src="//music.163.com/outchain/player?type=2&id=1352896581&auto=0&height=66"></iframe></p><center>有一种悲伤</center><p><img src="/2019/03/25/有一种悲伤/head.gif" alt></p><center> 打 开 的 第 一 件 事 情 就 是 <strong>想起我</strong></center><center> 竭 尽 全 力</center><center> 不 负 遇 见</center><center>▼</center><p><center> <strong>我的不定时更新｜ 与你说晚安</strong> </center><br><a id="more"></a> </p><p><img src="/2019/03/25/有一种悲伤/1.gif" alt><br><img src="/2019/03/25/有一种悲伤/2.jfif" alt></p><blockquote><p>  “人为什么要结婚啊？”</p></blockquote><blockquote><p>  “大概是当你老的时候，或是需要被照顾的时候，那个人可以理直气壮地一直陪在你身边。”</p></blockquote><blockquote><p>  今晚上跟陈小朋友去电影院看了《比悲伤更悲伤的故事》，去之前就听说这部电影很催泪，以为自己不会再那么容易被俗套剧情打动，没想到看到最后，还是红了眼眶。</p></blockquote><blockquote><p>  K和Cream从高中起相识，一个是父亲去世，被母亲抛弃；一个是双亲在车祸中去世，相似的经历，同样的孤独，让他们自然而然地走到了一起，同居十几年。</p></blockquote><blockquote><p>  其实就算故事的剧情里没有铺垫，十几年的时间是谁都无法忽略不计的，那是各自人生阶段里最好也是最糟糕的青春。</p></blockquote><blockquote><p>  <strong>更何况是这样身世彼此陪伴的两个人，他们早已经是对方世界里的不可或缺。</strong></p></blockquote><blockquote><p>  K知道自己身患绝症，时间不多，他最担心的是Cream。</p></blockquote><blockquote><p>  希望用给她找一个好男人的方式，帮她安顿好他去世后的生活，可是他不知道的是，当Cream知道他身患绝症以后，她没有拆穿，也没有说破，只是默默的成全他的所有，包括希望自己去找个好男人嫁了。</p></blockquote><blockquote><p>  不太记得是从哪一段开始哭的，但看到K从婚纱店跑出来，在天桥上，他以为对面站着的是穿着婚纱的Cream，结果不过是自己的一场幻觉而已，电影院里所有人也都在默默的擦眼泪。</p></blockquote><blockquote><p>  他们都竭尽全力，把自己所能想到的最好的爱，给了对方。</p></blockquote><blockquote><p>  比悲伤更悲伤的是，两个人明明相互惦念着，相互深爱着，却没有好好地在一起过。</p></blockquote><blockquote><p>  看到K明明已经把“我爱你”三个字打进了对话框，最后还是一个字一个字的删掉了，换成了一句“你要幸福”发出去。Cream眼睛里含着泪水，回了一句“谢谢”。</p></blockquote><blockquote><p>  其实，只要他勇敢地说出那句话，宋媛媛一定会义无反顾地和他在一起，无论他贫穷或富有，无论他健康或疾病，陪在他的身边，直到生命的最后一刻。</p></blockquote><blockquote><p>  就像Cream所说的，我要的不是在寒冬中送我热咖啡的人，而是下雨天陪我一起吃冰的人。</p></blockquote><blockquote><p>  <strong>我要的不是守护我的人，而是和我一起冒险的人，我要的不是别人，而是你。</strong></p></blockquote><p><img src="/2019/03/25/有一种悲伤/3.jfif" alt></p><blockquote><p>  K没有说出口，Cream也满足他的心愿，和别人走进了婚姻殿堂，看过电影的人都知道，其实Cream之前就发现K患病的事，也知道了他一直自己默默承受，还有为她所做的一切。</p></blockquote><blockquote><p>  可是爱情这件事，是骗不了人的。Cream骗不了自己的心，她还是选择回到了K的身边。在K最孤独最需要拥抱的时候，给了他最深的拥抱，陪他走完生命的最后时光。</p></blockquote><blockquote><p>  我想，如果在生命的最后一刻，没有看到最爱的人，那才是最遗憾的。</p></blockquote><blockquote><p>  相比较电影里那些排除万难都为对方着想的爱情，再看看身边那些近在咫尺却无比计较，生怕自己多付出一分一毫的感情，等到失去的时候，除了遗憾和回忆，也再没什么其他了吧。</p></blockquote><blockquote><p>  电影的结束，是爱情的再次相遇。现实里更多的，很多人都在爱情里错过或者迷惘。</p></blockquote><blockquote><p>  我们总以为下次还有机会，直到有一天，离别摆在了眼前，才知道没有什么来日方长，想做的事情就马上做，想见的人就马上见，喜欢的人就好好珍惜，不要等到来不及，不要让自己有遗憾。</p></blockquote><blockquote><p>  也许正是因为知道了限期，他们才会竭尽全力把自己最好的爱给对方。就像张敬轩那首《只是太爱你》唱的：“因为不知道下一辈子还是否能遇见你，所以我今生才会那么努力，把最好的给你。”</p></blockquote><blockquote><p>  我们的人生只有一次，无法重来，重要的不是把人生过得多精彩，而是如何让人生的遗憾少一点，再少一点。</p></blockquote><blockquote><p>  <strong>那什么才是人生的遗憾呢？人生的遗憾不是做错了什么，而是我本可以，但我却没这么做。</strong></p></blockquote><p><img src="/2019/03/25/有一种悲伤/4.jfif" alt></p><p>《比悲伤更悲伤的故事》里有一段说：</p><p><em>我不喜欢永远，因为少了一个人永远就不成立了，下辈子听起来还不错，像一个浪漫的约定。</em>  </p><p><em>下辈子的话，做个戒指、做个眼镜、做床棉被都好，只要能一直陪在你身旁就好。</em></p><p>慢慢的男女都会明白，无法跟喜欢的人在一起是人生的常态。</p><p>慢慢的大家都会明白爱不爱，可不可以在一起，能不能结婚是三件截然不同的事。</p><p><strong>慢慢的我们都会体会到比悲伤更悲伤的事</strong>，不是他不爱你，而是明明两个人互相惦念、互相喜欢，却无法在这一辈子在一起，只能希望寄托在下辈子身上了。</p><p>所以我想，在那些在电影院里哭成泪人的女孩身上，<br>应该都曾发生过一些爱而不得、无可奈何的故事吧！</p><p><strong>只是借着电影的由头，好好哭一场</strong></p><p><img src="/2019/03/25/有一种悲伤/5.jfif" alt></p><p><strong>1、如果爱必须要说出口，那哑巴如何相爱。</strong></p><p><strong>故事来源：\@雪泥鸿爪</strong></p><p><strong>第一年，我高一，他高二。</strong></p><p>我在楼梯的拐角差点撞到他，他戴着白色耳机，不知道有没有听到我心慌意乱的对不起。</p><p>后来的周一升旗仪式上，他做国旗下讲话，讲完认认真真的鞠躬致谢。距离他几十米的我，心里涟漪再起。</p><p><strong>第二年，我高二，他高三。</strong></p><p>我们换了班主任，竟然是他的母亲。</p><p>最后一节课，我胃疼去办公室请假，正遇上他。班主任说，那你扶她去校门口吧。</p><p>我一直记着那几百米的距离，初春的天气，他扶着我的胳膊，蓝色的校服相互依偎。</p><p><strong>第三年，我高三，他大一。</strong></p><p>学校里没有他，连那偶尔的擦肩而过也没有了，我也不再在校园里四处游荡。</p><p><strong>第四年，我大一，他大二。</strong></p><p>我终于再一次和他站在同一片土地，他依旧优秀，在大学里风生水起。</p><p>那年冬天的第一场雪，下得很大，我踩着厚厚的积雪去图书馆还书。</p><p>在图书馆门口，我就这样看到了他。他还是高中的样子，站在那里，笔直挺拔。</p><p>他笑着接过一个女孩子手里的书，给她的一只手带上手套，另一只手放进他的大衣口袋里握住。</p><p>那天晚上，我把这几年写的日记本全都放进了一个小纸箱里。</p><p>喜欢了一个人五年，最终还是成了人海茫茫中的两个陌生人。</p><p><img src="/2019/03/25/有一种悲伤/6.jfif" alt></p><p><strong> 2、</strong></p><p><strong> 说真话需要勇气，但为了爱的人，</strong></p><p><strong> 将谎话说到底，需要更大的勇气。</strong></p><p><strong>故事来源：\@喵小七</strong></p><p>我闺蜜很漂亮，公认的班花。</p><p>班里一个男生喜欢她，但是又不敢正面打交道，然后就让我帮他送情书、写信、送礼物、传悄悄话。</p><p>然后我帮他追我闺蜜追了三年，直到初中毕业都没成。</p><p>闺蜜当时也不是不喜欢那男生啊，只是太懵懂，觉得做朋友就好了。</p><p>七年以后我跟闺蜜聚在一起，提起当初的事情。我半开玩笑说，“哎，你干嘛不答应人家，人家真的挺好的，你不要给我多好。”</p><p>闺蜜：“你喜欢他？”，我：“嗯”。</p><p>闺蜜：“那你干嘛不说？”</p><p>我说：“可是我知道他一心喜欢你呀，他跟你在一起我才会觉得幸福。”</p><p>后来大概闺蜜偷偷跟那个男生讲了，那个男生特意要到我的联系方式，然后说了声：<strong>“谢谢你”。</strong></p><p><img src="/2019/03/25/有一种悲伤/7.jfif" alt></p><p><strong> 3、</strong></p><p><strong> “如果还有来生，你想做什么。？”</strong></p><p><strong> “除了做人，什么都行。戒指，眼镜，床，日记。”</strong></p><p><strong> “下辈子做这些东西？有什么意思？”</strong></p><p><strong> “你可以把我买回去，在你身边永远都有意思。”</strong></p><p><strong>故事来源：\@小机灵</strong></p><p>临别之际，我大包小包的在食堂门口等他。</p><p>还记得他穿着的是牛仔裤，配白色T恤，他看着我说：“有什么事？”</p><p>我笑着说：“没什么事，就觉得马上要放假了，两个月见不着特意跟你告个别。”</p><p>他也笑了：“还特意告个别。”</p><p>我突然不知道哪里来的勇气，说了一句：<strong>“能抱下你吗？”</strong></p><p>他犹豫地看着我：“抱……抱吧？”</p><p>我轻轻抱了一下，小心翼翼，生怕我们的感情就像瓷器，稍微用力，就出现裂缝。</p><p>那次，我还送了他一个红豆骰子链子，以表相思之情。</p><p>虽然，不知道他现在怎么处理了那个红豆链子，我是真的挺想成为那个红豆链子，哪怕只是待在他身边一小段时间。</p><p><img src="/2019/03/25/有一种悲伤/8.jfif" alt></p><p>电影的最后一幕，看见K和Cream的墓碑，我突然明白了：这就是之前铺垫的下辈子。</p><p>因为我不知道下一辈，还是否能遇见你，所以我今生才会和你一起离开。</p><p>但我们都知道，这世上根本没有下辈子。</p><p>所以一定要在这辈子去珍惜自己想爱的人，才不枉这一生。</p><p><strong>谁叫这人生稍纵即逝。</strong></p><p><img src="/2019/03/25/有一种悲伤/9.gif" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;300&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=1352896581&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;center&gt;有一种悲伤&lt;/center&gt;

&lt;p&gt;&lt;img src=&quot;/2019/03/25/有一种悲伤/head.gif&quot; alt&gt;&lt;/p&gt;
&lt;center&gt; 打 开 的 第 一 件 事 情 就 是 &lt;strong&gt;想起我&lt;/strong&gt;&lt;/center&gt;

&lt;center&gt; 竭 尽 全 力&lt;/center&gt;

&lt;center&gt; 不 负 遇 见&lt;/center&gt;

&lt;center&gt;▼&lt;/center&gt;

&lt;p&gt;&lt;center&gt; &lt;strong&gt;我的不定时更新｜ 与你说晚安&lt;/strong&gt; &lt;/center&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="movie" scheme="https://totoro2525.github.io/categories/movie/"/>
    
    
      <category term="movie" scheme="https://totoro2525.github.io/tags/movie/"/>
    
  </entry>
  
  <entry>
    <title>My secret</title>
    <link href="https://totoro2525.github.io/2019/03/25/secery/"/>
    <id>https://totoro2525.github.io/2019/03/25/secery/</id>
    <published>2019-03-25T12:03:57.554Z</published>
    <updated>2019-03-25T14:11:45.926Z</updated>
    
    <content type="html"><![CDATA[<h2 id="This-is-a-my-secret！！"><a href="#This-is-a-my-secret！！" class="headerlink" title="This is a my secret！！"></a>This is a my secret！！</h2><a id="more"></a> <h3 id="I-love-LinWenFan"><a href="#I-love-LinWenFan" class="headerlink" title="I love LinWenFan~"></a>I love LinWenFan~</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;This-is-a-my-secret！！&quot;&gt;&lt;a href=&quot;#This-is-a-my-secret！！&quot; class=&quot;headerlink&quot; title=&quot;This is a my secret！！&quot;&gt;&lt;/a&gt;This is a my secret！！&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://totoro2525.github.io/2019/03/24/hello-world/"/>
    <id>https://totoro2525.github.io/2019/03/24/hello-world/</id>
    <published>2019-03-24T15:47:54.788Z</published>
    <updated>2019-03-27T12:34:43.134Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><h3 id="Today-I-created-my-blog…"><a href="#Today-I-created-my-blog…" class="headerlink" title="Today I created my blog….."></a>Today I created my blog…..</h3><h4 id="date-2019-03-24"><a href="#date-2019-03-24" class="headerlink" title="date:2019.03.24"></a>date:2019.03.24</h4><a id="more"></a> <h3 id="My-information"><a href="#My-information" class="headerlink" title="My information:"></a>My information:</h3><ul><li>Name: Chenyuxiang</li><li>Age: 22</li><li>Sex：man</li><li>School:Minnan Normal University</li></ul><p><div id="music163player"><br>    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=169188&auto=0&height=66"><br>    </iframe><br> </div><br><!-- more --> </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World&quot;&gt;&lt;/a&gt;Hello World&lt;/h2&gt;&lt;h3 id=&quot;Today-I-created-my-blog…&quot;&gt;&lt;a href=&quot;#Today-I-created-my-blog…&quot; class=&quot;headerlink&quot; title=&quot;Today I created my blog…..&quot;&gt;&lt;/a&gt;Today I created my blog…..&lt;/h3&gt;&lt;h4 id=&quot;date-2019-03-24&quot;&gt;&lt;a href=&quot;#date-2019-03-24&quot; class=&quot;headerlink&quot; title=&quot;date:2019.03.24&quot;&gt;&lt;/a&gt;date:2019.03.24&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
